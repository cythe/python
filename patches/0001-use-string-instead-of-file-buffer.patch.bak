From 20d47904abb7a1a9431fc8e9f7304ff0bff9caf6 Mon Sep 17 00:00:00 2001
From: Ruiqiang Hao <Ruiqiang.Hao@windriver.com>
Date: Tue, 8 Jun 2021 11:13:09 +0800
Subject: [PATCH] use string instead of file buffer

---
 find.py | 48 ++++++++++++++++++++++++++++++++++++++++++------
 temp.py | 47 -----------------------------------------------
 2 files changed, 42 insertions(+), 53 deletions(-)
 delete mode 100755 temp.py

diff --git a/find.py b/find.py
index 007c1fc..aa5fa25 100755
--- a/find.py
+++ b/find.py
@@ -1,27 +1,63 @@
 #!/usr/bin/python3
+# -*- coding: UTF-8 -*-
 
+import re
 import os
 from color import print_c
+from ds import *
+from find import *
 
 def exit_process():
     print_c("sc_b_green", "Bye Bye!")
     exit()
 
 def get_commit_log(subject):
-    cmd = 'git log --no-merges --grep="' + subject + '"' + ' 1>commit_log.tmp' + ' 2>/dev/null'
-    print(cmd)
+    #cmd = 'git log --no-merges --grep="' + subject + '"' + ' 1>commit_log.tmp' + ' 2>/dev/null'
+    #print(cmd)
     #ret = os.system(cmd)
     #if (ret != 0):
     #    print_c("sc_b_red", "[ERROR]: Your git repo maybe has some trouble. Please check!")
     #    exit_process()
-    cmd = 'git log --no-merges --grep="' + subject + '"' + ' 2>/dev/null'
+    cmd = 'git log --no-merges --grep="' + subject.strip() + '"' + ' 2>/dev/null'
     ret = os.popen(cmd)
-    for a in ret:
-        print(a)
+    return ret
 
 ret = os.system("git status > /dev/null 2>&1")
 if (ret != 0):
     print_c("sc_b_red", "[FATAL]: It's not a git directory.")
     exit_process()
 
-get_commit_log("test mama ya ")
+restr= 'commit \w{40}\n'
+
+ret = get_commit_log("test mama ya ")
+buffer=''
+for a in ret:
+    buffer += a
+print (buffer)
+commit_logs = re.finditer(restr, buffer, re.M|re.I|re.S)
+#commit_logs = re.split( restr, buffer, re.M|re.S)
+
+commit_list = []
+last_slice = 0
+print (commit_logs)
+
+for match in commit_logs:
+    if(match.start()):
+        print('start={}, end={}\n'.format(last_slice, match.start()))
+        string=buffer[last_slice:match.start()]
+        #print('[' + string + ']')
+        last_slice = match.start()
+        print('--------------')
+        #print(string)
+        print('==============')
+        commit_list.append(commit_header(string))
+        print(commit_list)
+    
+print('start={}, end={}\n'.format(last_slice, len(buffer)))
+#print('[' + buffer[last_slice:] + ']')
+print('++++++++++++++')
+commit_list.append(commit_header(buffer[last_slice:]))
+
+for x in commit_list:
+    print(x)
+
diff --git a/temp.py b/temp.py
deleted file mode 100755
index 6a9c30b..0000000
--- a/temp.py
+++ /dev/null
@@ -1,47 +0,0 @@
-#!/usr/bin/python3
-# -*- coding: UTF-8 -*-
-
-import re
-from ds import *
-
-file = open('tmp', mode='r')
-
-restr= 'commit \w{40}\n'
-buffer=file.read()
-
-print (buffer)
-commit_logs = re.finditer(restr, buffer, re.M|re.I|re.S)
-#commit_logs = re.split( restr, buffer, re.M|re.S)
-
-commit_list = []
-last_slice = 0
-print (commit_logs)
-
-for match in commit_logs:
-    if(match.start()):
-        print('start={}, end={}\n'.format(last_slice, match.start()))
-        string=buffer[last_slice:match.start()]
-        #print('[' + string + ']')
-        last_slice = match.start()
-        print('--------------')
-        #print(string)
-        print('==============')
-        commit_list.append(commit_header(string))
-        print(commit_list)
-    
-print('start={}, end={}\n'.format(last_slice, len(buffer)))
-#print('[' + buffer[last_slice:] + ']')
-print('++++++++++++++')
-commit_list.append(commit_header(buffer[last_slice:]))
-
-for x in commit_list:
-    print(x)
-
-#file.seek(0)
-#
-#for line in file:
-#    print(line)
-
-file.close()
-
-
-- 
2.31.1

